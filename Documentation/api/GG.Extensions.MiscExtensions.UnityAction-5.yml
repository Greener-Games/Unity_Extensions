### YamlMime:ManagedReference
items:
- uid: GG.Extensions.MiscExtensions.UnityAction`5
  commentId: T:GG.Extensions.MiscExtensions.UnityAction`5
  id: MiscExtensions.UnityAction`5
  parent: GG.Extensions
  children: []
  langs:
  - csharp
  - vb
  name: MiscExtensions.UnityAction<T0, T1, T2, T3, T4>
  nameWithType: MiscExtensions.UnityAction<T0, T1, T2, T3, T4>
  fullName: GG.Extensions.MiscExtensions.UnityAction<T0, T1, T2, T3, T4>
  type: Delegate
  source:
    remote:
      path: Assets/Unity_Extensions/MiscExtensions.cs
      branch: master
      repo: https://github.com/Reddevildragg/Unity_Extensions.git
    id: UnityAction
    path: ../Assets/Unity_Extensions/MiscExtensions.cs
    startLine: 15
  assemblies:
  - gg.extensions
  namespace: GG.Extensions
  syntax:
    content: public delegate void UnityAction<T0, T1, T2, T3, T4>(T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4);
    parameters:
    - id: arg0
      type: '{T0}'
    - id: arg1
      type: '{T1}'
    - id: arg2
      type: '{T2}'
    - id: arg3
      type: '{T3}'
    - id: arg4
      type: '{T4}'
    typeParameters:
    - id: T0
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    content.vb: Public Delegate Sub UnityAction(Of T0, T1, T2, T3, T4)(arg0 As T0, arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4)
  extensionMethods:
  - GG.Extensions.MiscExtensions.UnityAction`5.GG.Extensions.EnumExtensions.GetDescription``1
  - GG.Extensions.MiscExtensions.UnityAction`5.GG.Extensions.MiscExtensions.CopyAll``2({T2})
  - GG.Extensions.MiscExtensions.UnityAction`5.GG.Extensions.EnumExtensions.GetDescription``1
  - GG.Extensions.MiscExtensions.UnityAction`5.GG.Extensions.MiscExtensions.CopyAll``2({T2})
  nameWithType.vb: MiscExtensions.UnityAction(Of T0, T1, T2, T3, T4)
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
  fullName.vb: GG.Extensions.MiscExtensions.UnityAction(Of T0, T1, T2, T3, T4)
  name.vb: MiscExtensions.UnityAction(Of T0, T1, T2, T3, T4)
references:
- uid: GG.Extensions
  commentId: N:GG.Extensions
  name: GG.Extensions
  nameWithType: GG.Extensions
  fullName: GG.Extensions
- uid: GG.Extensions.MiscExtensions.UnityAction`5.GG.Extensions.EnumExtensions.GetDescription``1
  commentId: M:GG.Extensions.EnumExtensions.GetDescription``1(``0)
  parent: GG.Extensions.EnumExtensions
  definition: GG.Extensions.EnumExtensions.GetDescription``1(``0)
  name: GetDescription<MiscExtensions.UnityAction<T0, T1, T2, T3, T4>>()
  nameWithType: EnumExtensions.GetDescription<MiscExtensions.UnityAction<T0, T1, T2, T3, T4>>()
  fullName: GG.Extensions.EnumExtensions.GetDescription<GG.Extensions.MiscExtensions.UnityAction<T0, T1, T2, T3, T4>>()
  nameWithType.vb: EnumExtensions.GetDescription(Of MiscExtensions.UnityAction(Of T0, T1, T2, T3, T4))()
  fullName.vb: GG.Extensions.EnumExtensions.GetDescription(Of GG.Extensions.MiscExtensions.UnityAction(Of T0, T1, T2, T3, T4))()
  name.vb: GetDescription(Of MiscExtensions.UnityAction(Of T0, T1, T2, T3, T4))()
  spec.csharp:
  - uid: GG.Extensions.EnumExtensions.GetDescription``1
    name: GetDescription<MiscExtensions.UnityAction<T0, T1, T2, T3, T4>>
    nameWithType: EnumExtensions.GetDescription<MiscExtensions.UnityAction<T0, T1, T2, T3, T4>>
    fullName: GG.Extensions.EnumExtensions.GetDescription<GG.Extensions.MiscExtensions.UnityAction<T0, T1, T2, T3, T4>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GG.Extensions.EnumExtensions.GetDescription``1
    name: GetDescription(Of MiscExtensions.UnityAction(Of T0, T1, T2, T3, T4))
    nameWithType: EnumExtensions.GetDescription(Of MiscExtensions.UnityAction(Of T0, T1, T2, T3, T4))
    fullName: GG.Extensions.EnumExtensions.GetDescription(Of GG.Extensions.MiscExtensions.UnityAction(Of T0, T1, T2, T3, T4))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GG.Extensions.MiscExtensions.UnityAction`5.GG.Extensions.MiscExtensions.CopyAll``2({T2})
  commentId: M:GG.Extensions.MiscExtensions.CopyAll``2(``0,``1)
  parent: GG.Extensions.MiscExtensions
  definition: GG.Extensions.MiscExtensions.CopyAll``2(``0,``1)
  name: CopyAll<MiscExtensions.UnityAction<T0, T1, T2, T3, T4>, T2>(T2)
  nameWithType: MiscExtensions.CopyAll<MiscExtensions.UnityAction<T0, T1, T2, T3, T4>, T2>(T2)
  fullName: GG.Extensions.MiscExtensions.CopyAll<GG.Extensions.MiscExtensions.UnityAction<T0, T1, T2, T3, T4>, T2>(T2)
  nameWithType.vb: MiscExtensions.CopyAll(Of MiscExtensions.UnityAction(Of T0, T1, T2, T3, T4), T2)(T2)
  fullName.vb: GG.Extensions.MiscExtensions.CopyAll(Of GG.Extensions.MiscExtensions.UnityAction(Of T0, T1, T2, T3, T4), T2)(T2)
  name.vb: CopyAll(Of MiscExtensions.UnityAction(Of T0, T1, T2, T3, T4), T2)(T2)
  spec.csharp:
  - uid: GG.Extensions.MiscExtensions.CopyAll``2(``1)
    name: CopyAll<MiscExtensions.UnityAction<T0, T1, T2, T3, T4>, T2>
    nameWithType: MiscExtensions.CopyAll<MiscExtensions.UnityAction<T0, T1, T2, T3, T4>, T2>
    fullName: GG.Extensions.MiscExtensions.CopyAll<GG.Extensions.MiscExtensions.UnityAction<T0, T1, T2, T3, T4>, T2>
  - name: (
    nameWithType: (
    fullName: (
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GG.Extensions.MiscExtensions.CopyAll``2(``1)
    name: CopyAll(Of MiscExtensions.UnityAction(Of T0, T1, T2, T3, T4), T2)
    nameWithType: MiscExtensions.CopyAll(Of MiscExtensions.UnityAction(Of T0, T1, T2, T3, T4), T2)
    fullName: GG.Extensions.MiscExtensions.CopyAll(Of GG.Extensions.MiscExtensions.UnityAction(Of T0, T1, T2, T3, T4), T2)
  - name: (
    nameWithType: (
    fullName: (
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T0}'
  commentId: '!:T0'
  definition: T0
  name: T0
  nameWithType: T0
  fullName: T0
- uid: '{T1}'
  commentId: '!:T1'
  definition: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: '{T2}'
  commentId: '!:T2'
  definition: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: '{T3}'
  commentId: '!:T3'
  definition: T3
  name: T3
  nameWithType: T3
  fullName: T3
- uid: '{T4}'
  commentId: '!:T4'
  definition: T4
  name: T4
  nameWithType: T4
  fullName: T4
- uid: GG.Extensions.EnumExtensions.GetDescription``1(``0)
  commentId: M:GG.Extensions.EnumExtensions.GetDescription``1(``0)
  name: GetDescription<T>(T)
  nameWithType: EnumExtensions.GetDescription<T>(T)
  fullName: GG.Extensions.EnumExtensions.GetDescription<T>(T)
  nameWithType.vb: EnumExtensions.GetDescription(Of T)(T)
  fullName.vb: GG.Extensions.EnumExtensions.GetDescription(Of T)(T)
  name.vb: GetDescription(Of T)(T)
  spec.csharp:
  - uid: GG.Extensions.EnumExtensions.GetDescription``1(``0)
    name: GetDescription<T>
    nameWithType: EnumExtensions.GetDescription<T>
    fullName: GG.Extensions.EnumExtensions.GetDescription<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GG.Extensions.EnumExtensions.GetDescription``1(``0)
    name: GetDescription(Of T)
    nameWithType: EnumExtensions.GetDescription(Of T)
    fullName: GG.Extensions.EnumExtensions.GetDescription(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GG.Extensions.EnumExtensions
  commentId: T:GG.Extensions.EnumExtensions
  parent: GG.Extensions
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: GG.Extensions.EnumExtensions
- uid: GG.Extensions.MiscExtensions.CopyAll``2(``0,``1)
  commentId: M:GG.Extensions.MiscExtensions.CopyAll``2(``0,``1)
  name: CopyAll<T, T2>(T, T2)
  nameWithType: MiscExtensions.CopyAll<T, T2>(T, T2)
  fullName: GG.Extensions.MiscExtensions.CopyAll<T, T2>(T, T2)
  nameWithType.vb: MiscExtensions.CopyAll(Of T, T2)(T, T2)
  fullName.vb: GG.Extensions.MiscExtensions.CopyAll(Of T, T2)(T, T2)
  name.vb: CopyAll(Of T, T2)(T, T2)
  spec.csharp:
  - uid: GG.Extensions.MiscExtensions.CopyAll``2(``0,``1)
    name: CopyAll<T, T2>
    nameWithType: MiscExtensions.CopyAll<T, T2>
    fullName: GG.Extensions.MiscExtensions.CopyAll<T, T2>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GG.Extensions.MiscExtensions.CopyAll``2(``0,``1)
    name: CopyAll(Of T, T2)
    nameWithType: MiscExtensions.CopyAll(Of T, T2)
    fullName: GG.Extensions.MiscExtensions.CopyAll(Of T, T2)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: GG.Extensions.MiscExtensions
  commentId: T:GG.Extensions.MiscExtensions
  parent: GG.Extensions
  name: MiscExtensions
  nameWithType: MiscExtensions
  fullName: GG.Extensions.MiscExtensions
- uid: T0
  name: T0
  nameWithType: T0
  fullName: T0
- uid: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: T3
  name: T3
  nameWithType: T3
  fullName: T3
- uid: T4
  name: T4
  nameWithType: T4
  fullName: T4
