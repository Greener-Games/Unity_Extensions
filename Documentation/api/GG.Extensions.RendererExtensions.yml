### YamlMime:ManagedReference
items:
- uid: GG.Extensions.RendererExtensions
  commentId: T:GG.Extensions.RendererExtensions
  id: RendererExtensions
  parent: GG.Extensions
  children:
  - GG.Extensions.RendererExtensions.SetMaterial(UnityEngine.Renderer,System.Int32,UnityEngine.Material)
  langs:
  - csharp
  - vb
  name: RendererExtensions
  nameWithType: RendererExtensions
  fullName: GG.Extensions.RendererExtensions
  type: Class
  source:
    remote:
      path: Assets/Unity_Extensions/RendererExtensions.cs
      branch: master
      repo: https://github.com/Reddevildragg/Unity_Extensions.git
    id: RendererExtensions
    path: ../Assets/Unity_Extensions/RendererExtensions.cs
    startLine: 4
  assemblies:
  - gg.extensions
  namespace: GG.Extensions
  syntax:
    content: public static class RendererExtensions
    content.vb: Public Module RendererExtensions
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: GG.Extensions.RendererExtensions.SetMaterial(UnityEngine.Renderer,System.Int32,UnityEngine.Material)
  commentId: M:GG.Extensions.RendererExtensions.SetMaterial(UnityEngine.Renderer,System.Int32,UnityEngine.Material)
  id: SetMaterial(UnityEngine.Renderer,System.Int32,UnityEngine.Material)
  isExtensionMethod: true
  parent: GG.Extensions.RendererExtensions
  langs:
  - csharp
  - vb
  name: SetMaterial(Renderer, Int32, Material)
  nameWithType: RendererExtensions.SetMaterial(Renderer, Int32, Material)
  fullName: GG.Extensions.RendererExtensions.SetMaterial(UnityEngine.Renderer, System.Int32, UnityEngine.Material)
  type: Method
  source:
    remote:
      path: Assets/Unity_Extensions/RendererExtensions.cs
      branch: master
      repo: https://github.com/Reddevildragg/Unity_Extensions.git
    id: SetMaterial
    path: ../Assets/Unity_Extensions/RendererExtensions.cs
    startLine: 6
  assemblies:
  - gg.extensions
  namespace: GG.Extensions
  syntax:
    content: public static void SetMaterial(this Renderer renderer, int index, Material material)
    parameters:
    - id: renderer
      type: UnityEngine.Renderer
    - id: index
      type: System.Int32
    - id: material
      type: UnityEngine.Material
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetMaterial(renderer As Renderer, index As Integer, material As Material)
  overload: GG.Extensions.RendererExtensions.SetMaterial*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: GG.Extensions
  commentId: N:GG.Extensions
  name: GG.Extensions
  nameWithType: GG.Extensions
  fullName: GG.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: GG.Extensions.RendererExtensions.SetMaterial*
  commentId: Overload:GG.Extensions.RendererExtensions.SetMaterial
  name: SetMaterial
  nameWithType: RendererExtensions.SetMaterial
  fullName: GG.Extensions.RendererExtensions.SetMaterial
- uid: UnityEngine.Renderer
  commentId: T:UnityEngine.Renderer
  parent: UnityEngine
  isExternal: true
  name: Renderer
  nameWithType: Renderer
  fullName: UnityEngine.Renderer
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: UnityEngine.Material
  commentId: T:UnityEngine.Material
  parent: UnityEngine
  isExternal: true
  name: Material
  nameWithType: Material
  fullName: UnityEngine.Material
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
