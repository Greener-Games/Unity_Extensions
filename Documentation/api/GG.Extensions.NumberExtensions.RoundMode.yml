### YamlMime:ManagedReference
items:
- uid: GG.Extensions.NumberExtensions.RoundMode
  commentId: T:GG.Extensions.NumberExtensions.RoundMode
  id: NumberExtensions.RoundMode
  parent: GG.Extensions
  children:
  - GG.Extensions.NumberExtensions.RoundMode.Down
  - GG.Extensions.NumberExtensions.RoundMode.Up
  - GG.Extensions.NumberExtensions.RoundMode.UpDown
  langs:
  - csharp
  - vb
  name: NumberExtensions.RoundMode
  nameWithType: NumberExtensions.RoundMode
  fullName: GG.Extensions.NumberExtensions.RoundMode
  type: Enum
  source:
    remote:
      path: Assets/Unity_Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Reddevildragg/Unity_Extensions.git
    id: RoundMode
    path: ../Assets/Unity_Extensions/NumberExtensions.cs
    startLine: 7
  assemblies:
  - gg.extensions
  namespace: GG.Extensions
  syntax:
    content: public enum RoundMode
    content.vb: Public Enum RoundMode
  extensionMethods:
  - GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.EnumExtensions.GetDescription``1
  - GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.EnumExtensions.IsFlagSet``1(GG.Extensions.NumberExtensions.RoundMode)
  - GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.EnumExtensions.GetFlags``1
  - GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.EnumExtensions.SetFlags``1(GG.Extensions.NumberExtensions.RoundMode,System.Boolean)
  - GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.EnumExtensions.SetFlags``1(GG.Extensions.NumberExtensions.RoundMode)
  - GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.EnumExtensions.ClearFlags``1(GG.Extensions.NumberExtensions.RoundMode)
  - GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.EnumExtensions.CycleEnum``1
  - GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.MiscExtensions.CopyAll``2({T2})
  - GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.EnumExtensions.GetDescription``1
  - GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.EnumExtensions.IsFlagSet``1(GG.Extensions.NumberExtensions.RoundMode)
  - GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.EnumExtensions.GetFlags``1
  - GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.EnumExtensions.SetFlags``1(GG.Extensions.NumberExtensions.RoundMode,System.Boolean)
  - GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.EnumExtensions.SetFlags``1(GG.Extensions.NumberExtensions.RoundMode)
  - GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.EnumExtensions.ClearFlags``1(GG.Extensions.NumberExtensions.RoundMode)
  - GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.EnumExtensions.CycleEnum``1
  - GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.MiscExtensions.CopyAll``2({T2})
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: GG.Extensions.NumberExtensions.RoundMode.UpDown
  commentId: F:GG.Extensions.NumberExtensions.RoundMode.UpDown
  id: UpDown
  parent: GG.Extensions.NumberExtensions.RoundMode
  langs:
  - csharp
  - vb
  name: UpDown
  nameWithType: NumberExtensions.RoundMode.UpDown
  fullName: GG.Extensions.NumberExtensions.RoundMode.UpDown
  type: Field
  source:
    remote:
      path: Assets/Unity_Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Reddevildragg/Unity_Extensions.git
    id: UpDown
    path: ../Assets/Unity_Extensions/NumberExtensions.cs
    startLine: 9
  assemblies:
  - gg.extensions
  namespace: GG.Extensions
  syntax:
    content: UpDown = 0
    return:
      type: GG.Extensions.NumberExtensions.RoundMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: GG.Extensions.NumberExtensions.RoundMode.Up
  commentId: F:GG.Extensions.NumberExtensions.RoundMode.Up
  id: Up
  parent: GG.Extensions.NumberExtensions.RoundMode
  langs:
  - csharp
  - vb
  name: Up
  nameWithType: NumberExtensions.RoundMode.Up
  fullName: GG.Extensions.NumberExtensions.RoundMode.Up
  type: Field
  source:
    remote:
      path: Assets/Unity_Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Reddevildragg/Unity_Extensions.git
    id: Up
    path: ../Assets/Unity_Extensions/NumberExtensions.cs
    startLine: 10
  assemblies:
  - gg.extensions
  namespace: GG.Extensions
  syntax:
    content: Up = 1
    return:
      type: GG.Extensions.NumberExtensions.RoundMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: GG.Extensions.NumberExtensions.RoundMode.Down
  commentId: F:GG.Extensions.NumberExtensions.RoundMode.Down
  id: Down
  parent: GG.Extensions.NumberExtensions.RoundMode
  langs:
  - csharp
  - vb
  name: Down
  nameWithType: NumberExtensions.RoundMode.Down
  fullName: GG.Extensions.NumberExtensions.RoundMode.Down
  type: Field
  source:
    remote:
      path: Assets/Unity_Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Reddevildragg/Unity_Extensions.git
    id: Down
    path: ../Assets/Unity_Extensions/NumberExtensions.cs
    startLine: 11
  assemblies:
  - gg.extensions
  namespace: GG.Extensions
  syntax:
    content: Down = 2
    return:
      type: GG.Extensions.NumberExtensions.RoundMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: GG.Extensions
  commentId: N:GG.Extensions
  name: GG.Extensions
  nameWithType: GG.Extensions
  fullName: GG.Extensions
- uid: GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.EnumExtensions.GetDescription``1
  commentId: M:GG.Extensions.EnumExtensions.GetDescription``1(``0)
  parent: GG.Extensions.EnumExtensions
  definition: GG.Extensions.EnumExtensions.GetDescription``1(``0)
  name: GetDescription<NumberExtensions.RoundMode>()
  nameWithType: EnumExtensions.GetDescription<NumberExtensions.RoundMode>()
  fullName: GG.Extensions.EnumExtensions.GetDescription<GG.Extensions.NumberExtensions.RoundMode>()
  nameWithType.vb: EnumExtensions.GetDescription(Of NumberExtensions.RoundMode)()
  fullName.vb: GG.Extensions.EnumExtensions.GetDescription(Of GG.Extensions.NumberExtensions.RoundMode)()
  name.vb: GetDescription(Of NumberExtensions.RoundMode)()
  spec.csharp:
  - uid: GG.Extensions.EnumExtensions.GetDescription``1
    name: GetDescription<NumberExtensions.RoundMode>
    nameWithType: EnumExtensions.GetDescription<NumberExtensions.RoundMode>
    fullName: GG.Extensions.EnumExtensions.GetDescription<GG.Extensions.NumberExtensions.RoundMode>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GG.Extensions.EnumExtensions.GetDescription``1
    name: GetDescription(Of NumberExtensions.RoundMode)
    nameWithType: EnumExtensions.GetDescription(Of NumberExtensions.RoundMode)
    fullName: GG.Extensions.EnumExtensions.GetDescription(Of GG.Extensions.NumberExtensions.RoundMode)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.EnumExtensions.IsFlagSet``1(GG.Extensions.NumberExtensions.RoundMode)
  commentId: M:GG.Extensions.EnumExtensions.IsFlagSet``1(``0,``0)
  parent: GG.Extensions.EnumExtensions
  definition: GG.Extensions.EnumExtensions.IsFlagSet``1(``0,``0)
  name: IsFlagSet<NumberExtensions.RoundMode>(NumberExtensions.RoundMode)
  nameWithType: EnumExtensions.IsFlagSet<NumberExtensions.RoundMode>(NumberExtensions.RoundMode)
  fullName: GG.Extensions.EnumExtensions.IsFlagSet<GG.Extensions.NumberExtensions.RoundMode>(GG.Extensions.NumberExtensions.RoundMode)
  nameWithType.vb: EnumExtensions.IsFlagSet(Of NumberExtensions.RoundMode)(NumberExtensions.RoundMode)
  fullName.vb: GG.Extensions.EnumExtensions.IsFlagSet(Of GG.Extensions.NumberExtensions.RoundMode)(GG.Extensions.NumberExtensions.RoundMode)
  name.vb: IsFlagSet(Of NumberExtensions.RoundMode)(NumberExtensions.RoundMode)
  spec.csharp:
  - uid: GG.Extensions.EnumExtensions.IsFlagSet``1(``0)
    name: IsFlagSet<NumberExtensions.RoundMode>
    nameWithType: EnumExtensions.IsFlagSet<NumberExtensions.RoundMode>
    fullName: GG.Extensions.EnumExtensions.IsFlagSet<GG.Extensions.NumberExtensions.RoundMode>
  - name: (
    nameWithType: (
    fullName: (
  - uid: GG.Extensions.NumberExtensions.RoundMode
    name: NumberExtensions.RoundMode
    nameWithType: NumberExtensions.RoundMode
    fullName: GG.Extensions.NumberExtensions.RoundMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GG.Extensions.EnumExtensions.IsFlagSet``1(``0)
    name: IsFlagSet(Of NumberExtensions.RoundMode)
    nameWithType: EnumExtensions.IsFlagSet(Of NumberExtensions.RoundMode)
    fullName: GG.Extensions.EnumExtensions.IsFlagSet(Of GG.Extensions.NumberExtensions.RoundMode)
  - name: (
    nameWithType: (
    fullName: (
  - uid: GG.Extensions.NumberExtensions.RoundMode
    name: NumberExtensions.RoundMode
    nameWithType: NumberExtensions.RoundMode
    fullName: GG.Extensions.NumberExtensions.RoundMode
  - name: )
    nameWithType: )
    fullName: )
- uid: GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.EnumExtensions.GetFlags``1
  commentId: M:GG.Extensions.EnumExtensions.GetFlags``1(``0)
  parent: GG.Extensions.EnumExtensions
  definition: GG.Extensions.EnumExtensions.GetFlags``1(``0)
  name: GetFlags<NumberExtensions.RoundMode>()
  nameWithType: EnumExtensions.GetFlags<NumberExtensions.RoundMode>()
  fullName: GG.Extensions.EnumExtensions.GetFlags<GG.Extensions.NumberExtensions.RoundMode>()
  nameWithType.vb: EnumExtensions.GetFlags(Of NumberExtensions.RoundMode)()
  fullName.vb: GG.Extensions.EnumExtensions.GetFlags(Of GG.Extensions.NumberExtensions.RoundMode)()
  name.vb: GetFlags(Of NumberExtensions.RoundMode)()
  spec.csharp:
  - uid: GG.Extensions.EnumExtensions.GetFlags``1
    name: GetFlags<NumberExtensions.RoundMode>
    nameWithType: EnumExtensions.GetFlags<NumberExtensions.RoundMode>
    fullName: GG.Extensions.EnumExtensions.GetFlags<GG.Extensions.NumberExtensions.RoundMode>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GG.Extensions.EnumExtensions.GetFlags``1
    name: GetFlags(Of NumberExtensions.RoundMode)
    nameWithType: EnumExtensions.GetFlags(Of NumberExtensions.RoundMode)
    fullName: GG.Extensions.EnumExtensions.GetFlags(Of GG.Extensions.NumberExtensions.RoundMode)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.EnumExtensions.SetFlags``1(GG.Extensions.NumberExtensions.RoundMode,System.Boolean)
  commentId: M:GG.Extensions.EnumExtensions.SetFlags``1(``0,``0,System.Boolean)
  parent: GG.Extensions.EnumExtensions
  definition: GG.Extensions.EnumExtensions.SetFlags``1(``0,``0,System.Boolean)
  name: SetFlags<NumberExtensions.RoundMode>(NumberExtensions.RoundMode, Boolean)
  nameWithType: EnumExtensions.SetFlags<NumberExtensions.RoundMode>(NumberExtensions.RoundMode, Boolean)
  fullName: GG.Extensions.EnumExtensions.SetFlags<GG.Extensions.NumberExtensions.RoundMode>(GG.Extensions.NumberExtensions.RoundMode, System.Boolean)
  nameWithType.vb: EnumExtensions.SetFlags(Of NumberExtensions.RoundMode)(NumberExtensions.RoundMode, Boolean)
  fullName.vb: GG.Extensions.EnumExtensions.SetFlags(Of GG.Extensions.NumberExtensions.RoundMode)(GG.Extensions.NumberExtensions.RoundMode, System.Boolean)
  name.vb: SetFlags(Of NumberExtensions.RoundMode)(NumberExtensions.RoundMode, Boolean)
  spec.csharp:
  - uid: GG.Extensions.EnumExtensions.SetFlags``1(``0,System.Boolean)
    name: SetFlags<NumberExtensions.RoundMode>
    nameWithType: EnumExtensions.SetFlags<NumberExtensions.RoundMode>
    fullName: GG.Extensions.EnumExtensions.SetFlags<GG.Extensions.NumberExtensions.RoundMode>
  - name: (
    nameWithType: (
    fullName: (
  - uid: GG.Extensions.NumberExtensions.RoundMode
    name: NumberExtensions.RoundMode
    nameWithType: NumberExtensions.RoundMode
    fullName: GG.Extensions.NumberExtensions.RoundMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GG.Extensions.EnumExtensions.SetFlags``1(``0,System.Boolean)
    name: SetFlags(Of NumberExtensions.RoundMode)
    nameWithType: EnumExtensions.SetFlags(Of NumberExtensions.RoundMode)
    fullName: GG.Extensions.EnumExtensions.SetFlags(Of GG.Extensions.NumberExtensions.RoundMode)
  - name: (
    nameWithType: (
    fullName: (
  - uid: GG.Extensions.NumberExtensions.RoundMode
    name: NumberExtensions.RoundMode
    nameWithType: NumberExtensions.RoundMode
    fullName: GG.Extensions.NumberExtensions.RoundMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.EnumExtensions.SetFlags``1(GG.Extensions.NumberExtensions.RoundMode)
  commentId: M:GG.Extensions.EnumExtensions.SetFlags``1(``0,``0)
  parent: GG.Extensions.EnumExtensions
  definition: GG.Extensions.EnumExtensions.SetFlags``1(``0,``0)
  name: SetFlags<NumberExtensions.RoundMode>(NumberExtensions.RoundMode)
  nameWithType: EnumExtensions.SetFlags<NumberExtensions.RoundMode>(NumberExtensions.RoundMode)
  fullName: GG.Extensions.EnumExtensions.SetFlags<GG.Extensions.NumberExtensions.RoundMode>(GG.Extensions.NumberExtensions.RoundMode)
  nameWithType.vb: EnumExtensions.SetFlags(Of NumberExtensions.RoundMode)(NumberExtensions.RoundMode)
  fullName.vb: GG.Extensions.EnumExtensions.SetFlags(Of GG.Extensions.NumberExtensions.RoundMode)(GG.Extensions.NumberExtensions.RoundMode)
  name.vb: SetFlags(Of NumberExtensions.RoundMode)(NumberExtensions.RoundMode)
  spec.csharp:
  - uid: GG.Extensions.EnumExtensions.SetFlags``1(``0)
    name: SetFlags<NumberExtensions.RoundMode>
    nameWithType: EnumExtensions.SetFlags<NumberExtensions.RoundMode>
    fullName: GG.Extensions.EnumExtensions.SetFlags<GG.Extensions.NumberExtensions.RoundMode>
  - name: (
    nameWithType: (
    fullName: (
  - uid: GG.Extensions.NumberExtensions.RoundMode
    name: NumberExtensions.RoundMode
    nameWithType: NumberExtensions.RoundMode
    fullName: GG.Extensions.NumberExtensions.RoundMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GG.Extensions.EnumExtensions.SetFlags``1(``0)
    name: SetFlags(Of NumberExtensions.RoundMode)
    nameWithType: EnumExtensions.SetFlags(Of NumberExtensions.RoundMode)
    fullName: GG.Extensions.EnumExtensions.SetFlags(Of GG.Extensions.NumberExtensions.RoundMode)
  - name: (
    nameWithType: (
    fullName: (
  - uid: GG.Extensions.NumberExtensions.RoundMode
    name: NumberExtensions.RoundMode
    nameWithType: NumberExtensions.RoundMode
    fullName: GG.Extensions.NumberExtensions.RoundMode
  - name: )
    nameWithType: )
    fullName: )
- uid: GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.EnumExtensions.ClearFlags``1(GG.Extensions.NumberExtensions.RoundMode)
  commentId: M:GG.Extensions.EnumExtensions.ClearFlags``1(``0,``0)
  parent: GG.Extensions.EnumExtensions
  definition: GG.Extensions.EnumExtensions.ClearFlags``1(``0,``0)
  name: ClearFlags<NumberExtensions.RoundMode>(NumberExtensions.RoundMode)
  nameWithType: EnumExtensions.ClearFlags<NumberExtensions.RoundMode>(NumberExtensions.RoundMode)
  fullName: GG.Extensions.EnumExtensions.ClearFlags<GG.Extensions.NumberExtensions.RoundMode>(GG.Extensions.NumberExtensions.RoundMode)
  nameWithType.vb: EnumExtensions.ClearFlags(Of NumberExtensions.RoundMode)(NumberExtensions.RoundMode)
  fullName.vb: GG.Extensions.EnumExtensions.ClearFlags(Of GG.Extensions.NumberExtensions.RoundMode)(GG.Extensions.NumberExtensions.RoundMode)
  name.vb: ClearFlags(Of NumberExtensions.RoundMode)(NumberExtensions.RoundMode)
  spec.csharp:
  - uid: GG.Extensions.EnumExtensions.ClearFlags``1(``0)
    name: ClearFlags<NumberExtensions.RoundMode>
    nameWithType: EnumExtensions.ClearFlags<NumberExtensions.RoundMode>
    fullName: GG.Extensions.EnumExtensions.ClearFlags<GG.Extensions.NumberExtensions.RoundMode>
  - name: (
    nameWithType: (
    fullName: (
  - uid: GG.Extensions.NumberExtensions.RoundMode
    name: NumberExtensions.RoundMode
    nameWithType: NumberExtensions.RoundMode
    fullName: GG.Extensions.NumberExtensions.RoundMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GG.Extensions.EnumExtensions.ClearFlags``1(``0)
    name: ClearFlags(Of NumberExtensions.RoundMode)
    nameWithType: EnumExtensions.ClearFlags(Of NumberExtensions.RoundMode)
    fullName: GG.Extensions.EnumExtensions.ClearFlags(Of GG.Extensions.NumberExtensions.RoundMode)
  - name: (
    nameWithType: (
    fullName: (
  - uid: GG.Extensions.NumberExtensions.RoundMode
    name: NumberExtensions.RoundMode
    nameWithType: NumberExtensions.RoundMode
    fullName: GG.Extensions.NumberExtensions.RoundMode
  - name: )
    nameWithType: )
    fullName: )
- uid: GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.EnumExtensions.CycleEnum``1
  commentId: M:GG.Extensions.EnumExtensions.CycleEnum``1(``0)
  parent: GG.Extensions.EnumExtensions
  definition: GG.Extensions.EnumExtensions.CycleEnum``1(``0)
  name: CycleEnum<NumberExtensions.RoundMode>()
  nameWithType: EnumExtensions.CycleEnum<NumberExtensions.RoundMode>()
  fullName: GG.Extensions.EnumExtensions.CycleEnum<GG.Extensions.NumberExtensions.RoundMode>()
  nameWithType.vb: EnumExtensions.CycleEnum(Of NumberExtensions.RoundMode)()
  fullName.vb: GG.Extensions.EnumExtensions.CycleEnum(Of GG.Extensions.NumberExtensions.RoundMode)()
  name.vb: CycleEnum(Of NumberExtensions.RoundMode)()
  spec.csharp:
  - uid: GG.Extensions.EnumExtensions.CycleEnum``1
    name: CycleEnum<NumberExtensions.RoundMode>
    nameWithType: EnumExtensions.CycleEnum<NumberExtensions.RoundMode>
    fullName: GG.Extensions.EnumExtensions.CycleEnum<GG.Extensions.NumberExtensions.RoundMode>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GG.Extensions.EnumExtensions.CycleEnum``1
    name: CycleEnum(Of NumberExtensions.RoundMode)
    nameWithType: EnumExtensions.CycleEnum(Of NumberExtensions.RoundMode)
    fullName: GG.Extensions.EnumExtensions.CycleEnum(Of GG.Extensions.NumberExtensions.RoundMode)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GG.Extensions.NumberExtensions.RoundMode.GG.Extensions.MiscExtensions.CopyAll``2({T2})
  commentId: M:GG.Extensions.MiscExtensions.CopyAll``2(``0,``1)
  parent: GG.Extensions.MiscExtensions
  definition: GG.Extensions.MiscExtensions.CopyAll``2(``0,``1)
  name: CopyAll<NumberExtensions.RoundMode, T2>(T2)
  nameWithType: MiscExtensions.CopyAll<NumberExtensions.RoundMode, T2>(T2)
  fullName: GG.Extensions.MiscExtensions.CopyAll<GG.Extensions.NumberExtensions.RoundMode, T2>(T2)
  nameWithType.vb: MiscExtensions.CopyAll(Of NumberExtensions.RoundMode, T2)(T2)
  fullName.vb: GG.Extensions.MiscExtensions.CopyAll(Of GG.Extensions.NumberExtensions.RoundMode, T2)(T2)
  name.vb: CopyAll(Of NumberExtensions.RoundMode, T2)(T2)
  spec.csharp:
  - uid: GG.Extensions.MiscExtensions.CopyAll``2(``1)
    name: CopyAll<NumberExtensions.RoundMode, T2>
    nameWithType: MiscExtensions.CopyAll<NumberExtensions.RoundMode, T2>
    fullName: GG.Extensions.MiscExtensions.CopyAll<GG.Extensions.NumberExtensions.RoundMode, T2>
  - name: (
    nameWithType: (
    fullName: (
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GG.Extensions.MiscExtensions.CopyAll``2(``1)
    name: CopyAll(Of NumberExtensions.RoundMode, T2)
    nameWithType: MiscExtensions.CopyAll(Of NumberExtensions.RoundMode, T2)
    fullName: GG.Extensions.MiscExtensions.CopyAll(Of GG.Extensions.NumberExtensions.RoundMode, T2)
  - name: (
    nameWithType: (
    fullName: (
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: GG.Extensions.EnumExtensions.GetDescription``1(``0)
  commentId: M:GG.Extensions.EnumExtensions.GetDescription``1(``0)
  name: GetDescription<T>(T)
  nameWithType: EnumExtensions.GetDescription<T>(T)
  fullName: GG.Extensions.EnumExtensions.GetDescription<T>(T)
  nameWithType.vb: EnumExtensions.GetDescription(Of T)(T)
  fullName.vb: GG.Extensions.EnumExtensions.GetDescription(Of T)(T)
  name.vb: GetDescription(Of T)(T)
  spec.csharp:
  - uid: GG.Extensions.EnumExtensions.GetDescription``1(``0)
    name: GetDescription<T>
    nameWithType: EnumExtensions.GetDescription<T>
    fullName: GG.Extensions.EnumExtensions.GetDescription<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GG.Extensions.EnumExtensions.GetDescription``1(``0)
    name: GetDescription(Of T)
    nameWithType: EnumExtensions.GetDescription(Of T)
    fullName: GG.Extensions.EnumExtensions.GetDescription(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GG.Extensions.EnumExtensions
  commentId: T:GG.Extensions.EnumExtensions
  parent: GG.Extensions
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: GG.Extensions.EnumExtensions
- uid: GG.Extensions.EnumExtensions.IsFlagSet``1(``0,``0)
  commentId: M:GG.Extensions.EnumExtensions.IsFlagSet``1(``0,``0)
  name: IsFlagSet<T>(T, T)
  nameWithType: EnumExtensions.IsFlagSet<T>(T, T)
  fullName: GG.Extensions.EnumExtensions.IsFlagSet<T>(T, T)
  nameWithType.vb: EnumExtensions.IsFlagSet(Of T)(T, T)
  fullName.vb: GG.Extensions.EnumExtensions.IsFlagSet(Of T)(T, T)
  name.vb: IsFlagSet(Of T)(T, T)
  spec.csharp:
  - uid: GG.Extensions.EnumExtensions.IsFlagSet``1(``0,``0)
    name: IsFlagSet<T>
    nameWithType: EnumExtensions.IsFlagSet<T>
    fullName: GG.Extensions.EnumExtensions.IsFlagSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GG.Extensions.EnumExtensions.IsFlagSet``1(``0,``0)
    name: IsFlagSet(Of T)
    nameWithType: EnumExtensions.IsFlagSet(Of T)
    fullName: GG.Extensions.EnumExtensions.IsFlagSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GG.Extensions.EnumExtensions.GetFlags``1(``0)
  commentId: M:GG.Extensions.EnumExtensions.GetFlags``1(``0)
  name: GetFlags<T>(T)
  nameWithType: EnumExtensions.GetFlags<T>(T)
  fullName: GG.Extensions.EnumExtensions.GetFlags<T>(T)
  nameWithType.vb: EnumExtensions.GetFlags(Of T)(T)
  fullName.vb: GG.Extensions.EnumExtensions.GetFlags(Of T)(T)
  name.vb: GetFlags(Of T)(T)
  spec.csharp:
  - uid: GG.Extensions.EnumExtensions.GetFlags``1(``0)
    name: GetFlags<T>
    nameWithType: EnumExtensions.GetFlags<T>
    fullName: GG.Extensions.EnumExtensions.GetFlags<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GG.Extensions.EnumExtensions.GetFlags``1(``0)
    name: GetFlags(Of T)
    nameWithType: EnumExtensions.GetFlags(Of T)
    fullName: GG.Extensions.EnumExtensions.GetFlags(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GG.Extensions.EnumExtensions.SetFlags``1(``0,``0,System.Boolean)
  commentId: M:GG.Extensions.EnumExtensions.SetFlags``1(``0,``0,System.Boolean)
  isExternal: true
  name: SetFlags<T>(T, T, Boolean)
  nameWithType: EnumExtensions.SetFlags<T>(T, T, Boolean)
  fullName: GG.Extensions.EnumExtensions.SetFlags<T>(T, T, System.Boolean)
  nameWithType.vb: EnumExtensions.SetFlags(Of T)(T, T, Boolean)
  fullName.vb: GG.Extensions.EnumExtensions.SetFlags(Of T)(T, T, System.Boolean)
  name.vb: SetFlags(Of T)(T, T, Boolean)
  spec.csharp:
  - uid: GG.Extensions.EnumExtensions.SetFlags``1(``0,``0,System.Boolean)
    name: SetFlags<T>
    nameWithType: EnumExtensions.SetFlags<T>
    fullName: GG.Extensions.EnumExtensions.SetFlags<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GG.Extensions.EnumExtensions.SetFlags``1(``0,``0,System.Boolean)
    name: SetFlags(Of T)
    nameWithType: EnumExtensions.SetFlags(Of T)
    fullName: GG.Extensions.EnumExtensions.SetFlags(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GG.Extensions.EnumExtensions.SetFlags``1(``0,``0)
  commentId: M:GG.Extensions.EnumExtensions.SetFlags``1(``0,``0)
  name: SetFlags<T>(T, T)
  nameWithType: EnumExtensions.SetFlags<T>(T, T)
  fullName: GG.Extensions.EnumExtensions.SetFlags<T>(T, T)
  nameWithType.vb: EnumExtensions.SetFlags(Of T)(T, T)
  fullName.vb: GG.Extensions.EnumExtensions.SetFlags(Of T)(T, T)
  name.vb: SetFlags(Of T)(T, T)
  spec.csharp:
  - uid: GG.Extensions.EnumExtensions.SetFlags``1(``0,``0)
    name: SetFlags<T>
    nameWithType: EnumExtensions.SetFlags<T>
    fullName: GG.Extensions.EnumExtensions.SetFlags<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GG.Extensions.EnumExtensions.SetFlags``1(``0,``0)
    name: SetFlags(Of T)
    nameWithType: EnumExtensions.SetFlags(Of T)
    fullName: GG.Extensions.EnumExtensions.SetFlags(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GG.Extensions.EnumExtensions.ClearFlags``1(``0,``0)
  commentId: M:GG.Extensions.EnumExtensions.ClearFlags``1(``0,``0)
  name: ClearFlags<T>(T, T)
  nameWithType: EnumExtensions.ClearFlags<T>(T, T)
  fullName: GG.Extensions.EnumExtensions.ClearFlags<T>(T, T)
  nameWithType.vb: EnumExtensions.ClearFlags(Of T)(T, T)
  fullName.vb: GG.Extensions.EnumExtensions.ClearFlags(Of T)(T, T)
  name.vb: ClearFlags(Of T)(T, T)
  spec.csharp:
  - uid: GG.Extensions.EnumExtensions.ClearFlags``1(``0,``0)
    name: ClearFlags<T>
    nameWithType: EnumExtensions.ClearFlags<T>
    fullName: GG.Extensions.EnumExtensions.ClearFlags<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GG.Extensions.EnumExtensions.ClearFlags``1(``0,``0)
    name: ClearFlags(Of T)
    nameWithType: EnumExtensions.ClearFlags(Of T)
    fullName: GG.Extensions.EnumExtensions.ClearFlags(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GG.Extensions.EnumExtensions.CycleEnum``1(``0)
  commentId: M:GG.Extensions.EnumExtensions.CycleEnum``1(``0)
  name: CycleEnum<T>(T)
  nameWithType: EnumExtensions.CycleEnum<T>(T)
  fullName: GG.Extensions.EnumExtensions.CycleEnum<T>(T)
  nameWithType.vb: EnumExtensions.CycleEnum(Of T)(T)
  fullName.vb: GG.Extensions.EnumExtensions.CycleEnum(Of T)(T)
  name.vb: CycleEnum(Of T)(T)
  spec.csharp:
  - uid: GG.Extensions.EnumExtensions.CycleEnum``1(``0)
    name: CycleEnum<T>
    nameWithType: EnumExtensions.CycleEnum<T>
    fullName: GG.Extensions.EnumExtensions.CycleEnum<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GG.Extensions.EnumExtensions.CycleEnum``1(``0)
    name: CycleEnum(Of T)
    nameWithType: EnumExtensions.CycleEnum(Of T)
    fullName: GG.Extensions.EnumExtensions.CycleEnum(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GG.Extensions.MiscExtensions.CopyAll``2(``0,``1)
  commentId: M:GG.Extensions.MiscExtensions.CopyAll``2(``0,``1)
  name: CopyAll<T, T2>(T, T2)
  nameWithType: MiscExtensions.CopyAll<T, T2>(T, T2)
  fullName: GG.Extensions.MiscExtensions.CopyAll<T, T2>(T, T2)
  nameWithType.vb: MiscExtensions.CopyAll(Of T, T2)(T, T2)
  fullName.vb: GG.Extensions.MiscExtensions.CopyAll(Of T, T2)(T, T2)
  name.vb: CopyAll(Of T, T2)(T, T2)
  spec.csharp:
  - uid: GG.Extensions.MiscExtensions.CopyAll``2(``0,``1)
    name: CopyAll<T, T2>
    nameWithType: MiscExtensions.CopyAll<T, T2>
    fullName: GG.Extensions.MiscExtensions.CopyAll<T, T2>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GG.Extensions.MiscExtensions.CopyAll``2(``0,``1)
    name: CopyAll(Of T, T2)
    nameWithType: MiscExtensions.CopyAll(Of T, T2)
    fullName: GG.Extensions.MiscExtensions.CopyAll(Of T, T2)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: GG.Extensions.MiscExtensions
  commentId: T:GG.Extensions.MiscExtensions
  parent: GG.Extensions
  name: MiscExtensions
  nameWithType: MiscExtensions
  fullName: GG.Extensions.MiscExtensions
- uid: GG.Extensions.NumberExtensions.RoundMode
  commentId: T:GG.Extensions.NumberExtensions.RoundMode
  parent: GG.Extensions
  name: NumberExtensions.RoundMode
  nameWithType: NumberExtensions.RoundMode
  fullName: GG.Extensions.NumberExtensions.RoundMode
